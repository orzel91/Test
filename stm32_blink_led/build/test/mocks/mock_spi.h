/* AUTOGENERATED FILE. DO NOT EDIT. */
#ifndef _MOCK_SPI_H
#define _MOCK_SPI_H

#include "spi.h"

/* Ignore the following warnings, since we are copying code */
#if defined(__GNUC__) && !defined(__ICC) && !defined(__TMS470__)
#if __GNUC__ > 4 || (__GNUC__ == 4 && (__GNUC_MINOR__ > 6 || (__GNUC_MINOR__ == 6 && __GNUC_PATCHLEVEL__ > 0)))
#pragma GCC diagnostic push
#endif
#if !defined(__clang__)
#pragma GCC diagnostic ignored "-Wpragmas"
#endif
#pragma GCC diagnostic ignored "-Wunknown-pragmas"
#pragma GCC diagnostic ignored "-Wduplicate-decl-specifier"
#endif

void mock_spi_Init(void);
void mock_spi_Destroy(void);
void mock_spi_Verify(void);




#define SPI_init_Ignore() SPI_init_CMockIgnore()
void SPI_init_CMockIgnore(void);
#define SPI_init_Expect() SPI_init_CMockExpect(__LINE__)
void SPI_init_CMockExpect(UNITY_LINE_TYPE cmock_line);
typedef void (* CMOCK_SPI_init_CALLBACK)(int cmock_num_calls);
void SPI_init_StubWithCallback(CMOCK_SPI_init_CALLBACK Callback);
#define SPI_sendData_Ignore() SPI_sendData_CMockIgnore()
void SPI_sendData_CMockIgnore(void);
#define SPI_sendData_Expect(src, cnt) SPI_sendData_CMockExpect(__LINE__, src, cnt)
void SPI_sendData_CMockExpect(UNITY_LINE_TYPE cmock_line, uint8_t* src, uint16_t cnt);
typedef void (* CMOCK_SPI_sendData_CALLBACK)(uint8_t* src, uint16_t cnt, int cmock_num_calls);
void SPI_sendData_StubWithCallback(CMOCK_SPI_sendData_CALLBACK Callback);
#define SPI_sendCmd_Ignore() SPI_sendCmd_CMockIgnore()
void SPI_sendCmd_CMockIgnore(void);
#define SPI_sendCmd_Expect(cmd) SPI_sendCmd_CMockExpect(__LINE__, cmd)
void SPI_sendCmd_CMockExpect(UNITY_LINE_TYPE cmock_line, uint8_t cmd);
typedef void (* CMOCK_SPI_sendCmd_CALLBACK)(uint8_t cmd, int cmock_num_calls);
void SPI_sendCmd_StubWithCallback(CMOCK_SPI_sendCmd_CALLBACK Callback);
#define SPI_checkDmaStatus_Ignore() SPI_checkDmaStatus_CMockIgnore()
void SPI_checkDmaStatus_CMockIgnore(void);
#define SPI_checkDmaStatus_Expect() SPI_checkDmaStatus_CMockExpect(__LINE__)
void SPI_checkDmaStatus_CMockExpect(UNITY_LINE_TYPE cmock_line);
typedef void (* CMOCK_SPI_checkDmaStatus_CALLBACK)(int cmock_num_calls);
void SPI_checkDmaStatus_StubWithCallback(CMOCK_SPI_checkDmaStatus_CALLBACK Callback);

#if defined(__GNUC__) && !defined(__ICC) && !defined(__TMS470__)
#if __GNUC__ > 4 || (__GNUC__ == 4 && (__GNUC_MINOR__ > 6 || (__GNUC_MINOR__ == 6 && __GNUC_PATCHLEVEL__ > 0)))
#pragma GCC diagnostic pop
#endif
#endif

#endif
